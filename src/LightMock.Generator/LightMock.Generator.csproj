<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <IncludeBuildOutput>false</IncludeBuildOutput>

    <AssemblyName>LightMock.Generator</AssemblyName>
    <RootNamespace>LightMock.Generator</RootNamespace>
    <PackageId>LightMock.Generator</PackageId>
    <Summary>LightMock.Generator: Source generator that generates mocks by provided interfaces, classes and delegates.</Summary>
    <Description>LightMock.Generator: Source generator that generates mocks by provided interfaces, classes and delegates.</Description>
    <PackageTags>mock generator roslyn aot lightmock android ios uwp xamarin</PackageTags>
	<PackageReadmeFile>README.md</PackageReadmeFile>
    <Title>LightMock.Generator</Title>
    <PackageReleaseNotes>$([System.IO.File]::ReadAllText("$(MSBuildProjectDirectory)/../../release-notes.txt"))</PackageReleaseNotes>
    <DefineConstants>$(DefineConstants);</DefineConstants>
    <UseFullSemVerForNuGet>false</UseFullSemVerForNuGet>
    <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
    <DebugType>portable</DebugType>
    <Configurations>Debug;Release</Configurations>
  </PropertyGroup>

  <Import Project="../common.props" />
  
  <PropertyGroup Condition=" '$(Configuration)'=='Debug' ">
    <DebugSymbols>true</DebugSymbols>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="3.11.0" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup Label="Package">
    <None Include="LightMock.Generator.targets" Pack="true" PackagePath="buildTransitive/netstandard2.0" />
    <None Include="LightMock.Generator.props" Pack="true" PackagePath="buildTransitive/netstandard2.0" />
    <None Include="LightMock.Generator.props" Pack="true" PackagePath="build/netstandard2.0" />

    <None Include="$(OutputPath)/$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/roslyn3.8/cs" Visible="false" />
    <None Include="../LightMock.Generator.Roslyn40/$(OutputPath)/$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/roslyn4.0/cs" Visible="false" />
    <None Include="../LightMock.Generator.Common/$(OutputPath)/LightMock.Generator.Common.dll" Pack="true" PackagePath="analyzers/dotnet/roslyn3.8/cs" Visible="false" />
    <None Include="../LightMock.Generator.Common/$(OutputPath)/LightMock.Generator.Common.dll" Pack="true" PackagePath="analyzers/dotnet/roslyn4.0/cs" Visible="false" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="Resorces\*.cs" />
    <Compile Include="*.cs" />
    <Compile Include="*\*.cs" />
  </ItemGroup>

  <ItemGroup>
    <AdditionalFiles Include="AnalyzerReleases.Shipped.md" />
    <AdditionalFiles Include="AnalyzerReleases.Unshipped.md" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\LightMock.Generator.Common\LightMock.Generator.Common.csproj" />
    <ProjectReference Include="..\LightMock.Generator.Roslyn40\LightMock.Generator.Roslyn40.csproj" ReferenceOutputAssembly="false" />
  </ItemGroup>

  <!-- Copy package to folder set by NuGetFolder environment variable if present -->
  <Target Name="CopyPackage" AfterTargets="Pack" Condition=" '$(NuGetFolder)' != '' ">
    <Copy SourceFiles="$(OutputPath)..\$(PackageId).$(PackageVersion).nupkg" DestinationFolder="$(NuGetFolder)" />
  </Target>

</Project>