// <auto-generated />
using System;
using System.Collections.Generic;
using System.Linq.Expressions;

namespace LightMock.Generator
{
    public static class ContextResolver
    {
        public static IReadOnlyDictionary<Type, Type> TypeByType { get; } = new Dictionary<Type, Type>()
        {
            /*typeByTypeBuilder*/
        };

        public static LambdaExpression ExchangeForExpression(string token, IContextResolverDefaults defaults)
        {
            switch (token)
            {
                /*exchangeForExpressionBuilder*/
                default:
                    throw new ArgumentException($"expression for provided token [{token}] is not found");
            }
        }
    }

}
